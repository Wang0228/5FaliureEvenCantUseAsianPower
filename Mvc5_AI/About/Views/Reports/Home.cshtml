
@{
    ViewData["Title"] = "Home";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="./interface.css">
</head>
<body>
    <div class="header">
        <ul class="headinfo">
            <li><img src="https://media1.giphy.com/media/7kn27lnYSAE9O/200.webp?cid=ecf05e47mwx2cuu86ct9i80fhmbahffgmbvl4uq2i6o0b0rq&rid=200.webp&ct=g" alt=""></li>
            <li><a asp-controller="Reports" asp-action="Home">Home</a></li>
            <li><a asp-controller="Users" asp-action="Index">about us</a></li>
            <li><a asp-controller="Reports" asp-action="UserReport">QAgpt</a></li>
        </ul>
        <ul class="account" id="account">
            @if (User.Identity.IsAuthenticated)
            {
                <li><a asp-controller="Users" asp-action="Signout" class="btn btn-primary me-2">@User.Identity.Name</a></li>
                <li>@Html.ActionLink("登出", "Signout","Users", null, new { @class="btn btn-danger"})</li>
            }
            else
            {
                <li>
                    <a class="Create" asp-controller="Users" asp-action="Create">Sign up</a>
                </li>
                <li>
                    <a class="login" asp-controller="Users" asp-action="Login">Log in</a>
                </li>
            }
            <li>
                <select name="language" id="language">
                    <option value="zh" selected>Chinese</option>
                    <option value="en">English</option>
                    <option value="jp">Japanese</option>
                </select>
            </li>

        </ul>
    </div>
    <div class="main">
        <div class="useinfo">
            <h1>想訓練專屬於自己的文本機器人嗎?<br>不論是應用在:客服、問答機器人都可以輕鬆做到<br>只要加入<a onclick="sign()">會員</a>並上傳您的資料即可輕鬆產生自己所需的機器人</h1>
            <div>
                <h1>還不是會員嗎?</h1>
                <button onclick="sign()">註冊會員</button>
            </div>
        </div>
        <div class="useinfo">
            <h1>為什麼要使用AI產生問答機器人?<br>用AI有什麼好處?</h1>

            <div class="accordionbox">
                <div class="accordion" onclick="toggleAccordion(0)">
                    <h3>提供即時且高效的客戶服務</h3>
                    <div class="content">
                        <p>AI問答機器人可以在24小時7天不間斷地提供即時回應，無需等待人工客服的回覆時間。這可以大幅提升客戶滿意度，並節省客戶等待時間。</p>
                    </div>
                </div>
                <div class="accordion" onclick="toggleAccordion(1)">
                    <h3>節省人力資源</h3>
                    <div class="content">
                        <p>使用AI問答機器人可以減少對人工客服人員的依賴，降低企業的人力成本。同時，AI問答機器人能夠處理大量的問題和諮詢，減輕了客服人員的工作負擔，使他們能夠專注於更複雜的客戶需求。</p>
                    </div>
                </div>
                <div class="accordion" onclick="toggleAccordion(2)">
                    <h3>提供一致且準確的回答</h3>
                    <div class="content">
                        <p>AI問答機器人可以根據事先設定的知識庫或訓練資料，提供一致且準確的回答，避免了人工客服可能因個人經驗或知識不足而導致的回答不一致或錯誤。</p>
                    </div>
                </div>
                <div class="accordion" onclick="toggleAccordion(3)">
                    <h3>提供個人化的服務</h3>
                    <div class="content">
                        <p>AI問答機器人可以根據使用者的需求和偏好，提供個人化的回答和建議。透過機器學習和自然語言處理技術，AI問答機器人能夠理解使用者的語言並根據其需求進行回應，提供更貼近使用者的體驗。</p>
                    </div>
                </div>
                <div class="accordion" onclick="toggleAccordion(4)">
                    <h3>改進客戶支援和產品改進</h3>
                    <div class="content">
                        <p>AI問答機器人可以收集並分析使用者的問題和回饋，幫助企業識別客戶需求和痛點，從而改進產品和服務。這可以幫助企業更好地了解客戶需求並作出相應的調整，提升客戶滿意度和忠誠度。</p>
                    </div>
                </div>
            </div>




        </div>
        <div class="useinfo">
            <ul class="flags">
                <li>
                    <div class="flag taiwan"></div>
                    <p>中文</p>
                </li>
                <li>
                    <div class="flag usa"></div>
                    <p>英文</p>
                </li>
                <li>
                    <div class="flag japan"></div>
                    <p>日文</p>
                </li>
                <li>
                    <div class="flag korea"></div>
                    <p>韓文</p>
                </li>
                <li>
                    <div class="flag canada"></div>
                    <p>加拿大文</p>
                </li>
                <li>
                    <div class="flag uk"></div>
                    <p>英文</p>
                </li>
                <li>
                    <div class="flag australia"></div>
                    <p>英文</p>
                </li>
                <li>
                    <div class="flag france"></div>
                    <p>法文</p>
                </li>
                <li>
                    <div class="flag germany"></div>
                    <p>德文</p>
                </li>
                <li>
                    <div class="flag italy"></div>
                    <p>義文</p>
                </li>
                <li>
                    <div class="flag brazil"></div>
                    <p>葡萄牙文</p>
                </li>
            </ul>
            <h1>我們支持以上的語言:</h1>
        </div>
    </div>


    <script>
        function sign() {
            let gary = document.getElementById('gary')
            gary.setAttribute("style", "display:block;position:absolute;width: 100%;height: 100%;z-index: 99;background-color: #585858ab;display: flex;justify - content: center;align - items: center; ")
            registerBtn.classList.add("active");
            loginBtn.classList.remove("active");
            registerForm.style.display = "flex";
            loginForm.style.display = "none";
        }
        function login() {
            let gary = document.getElementById('gary')
            gary.setAttribute("style", "display:block;position:absolute;width: 100%;height: 100%;z-index: 99;background-color: #585858ab;display: flex;justify - content: center;align - items: center; ")
            loginBtn.classList.add("active");
            registerBtn.classList.remove("active");
            loginForm.style.display = "flex";
            registerForm.style.display = "none";
        }

        //切換手風琴
        function toggleAccordion(index) {
            var accordion = document.getElementsByClassName('accordion');
            var content = document.getElementsByClassName('content');
            // 關閉其他已展開的手風琴
            for (var i = 0; i < accordion.length; i++) {
                if (i !== index) {
                    accordion[i].classList.remove('active');
                    content[i].style.maxHeight = null;
                }
            }
            accordion[index].classList.toggle('active');
            var maxHeight = content[index].style.maxHeight;
            if (maxHeight === '' || maxHeight === '0px') {
                // 展開被點擊的手風琴
                content[index].style.maxHeight = content[index].scrollHeight + 'px';
            } else {
                // 關閉被點擊的手風琴
                content[index].style.maxHeight = null;
            }
        }

    </script>


    <script>
        const loginBtn = document.getElementById("login-btn");
        const registerBtn = document.getElementById("register-btn");
        const closeBtn = document.getElementById("close-btn");
        const loginForm = document.getElementById("login-form");
        const registerForm = document.getElementById("register-form");
        const sendCodeBtn = document.getElementById("send-code-btn");
        const registerEmailInput = document.getElementById("register-email");
        const codeInput = document.getElementById("code");
        const registerPasswordInput = document.getElementById("register-password");
        const confirmPasswordInput = document.getElementById("confirm-password");
        // 建立 email 和 password 陣列
        const emailList = [];
        const passwordList = [];
        // 切換登入和註冊表單
        loginBtn.addEventListener("click", () => {
            loginBtn.classList.add("active");
            registerBtn.classList.remove("active");
            loginForm.style.display = "flex";
            registerForm.style.display = "none";
        });

        registerBtn.addEventListener("click", () => {
            registerBtn.classList.add("active");
            loginBtn.classList.remove("active");
            registerForm.style.display = "flex";
            loginForm.style.display = "none";
        });
        //關閉登入介面
        closeBtn.addEventListener("click", () => {
            let gary = document.getElementById('gary')
            gary.setAttribute("style", "display:none")
        })

        // 發送驗證碼到註冊的電子郵件
        sendCodeBtn.addEventListener("click", () => {
            const email = registerEmailInput.value;
            // 將驗證碼發送到電子郵件
        });

        // 將註冊資料儲存進陣列
        registerForm.addEventListener("submit", (event) => {
            event.preventDefault();

            const email = registerEmailInput.value;

            //這邊可以新增驗證碼驗證

            const password = registerPasswordInput.value;
            const confirmPassword = confirmPasswordInput.value;

            // 驗證輸入的資料
            if (password !== confirmPassword) {
                alert("Passwords do not match");
                return;
            }
            if (emailList.includes(email)) {
                alert("This email has already been registered. Please use a different email.");
                return;
            }
            // 將 email 和 password 儲存進陣列
            emailList.push(email);
            passwordList.push(password);

            // 提交表單
            alert("Registration successful!");
            registerForm.reset();

        });


        // 驗證登入資料是否存在於陣列中
        loginForm.addEventListener("submit", (event) => {
            event.preventDefault();

            const email = loginForm.email.value;
            const password = loginForm.password.value;

            // 搜尋 email 和 password 是否存在於陣列中
            const index = emailList.indexOf(email);
            if (index !== -1 && passwordList[index] === password) {
                alert("Login successful!");
                loginForm.reset();
                // 登入成功後執行其他動作\
                let gary = document.getElementById('gary')
                gary.setAttribute("style", "display:none")
                loginbool = true;

                let accountinfotrue =
                    `<li>
                                        <button class="sign"onclick="account()">account</button>
                                    </li>
                                    <li>
                                        <button class="login"onclick="logout()">log out</button>
                                    </li>`
                account.innerHTML = accountinfotrue
            } else {
                alert("Invalid email or password!");
            }
        });
    </script>


</body>
</html>

@section topCSS{
<style>
                                                
body, html, h1, h2, h3, h4, h5, h6, p, span, img, ul, li {
  margin: 0px;
  padding: 0px;
}

body {
  position: relative;
}

a {
  text-decoration: none;
  color: #000000;
}

li {
  list-style: none;
}

.pdlr, .useinfo {
  box-sizing: border-box;
  padding: 0 10%;
}

.header {
  box-sizing: border-box;
  padding: 0 10%;
  display: flex;
  width: 100%;
  height: 70px;
  background-color: #919191;
  justify-content: space-between;
}
.header img {
  height: 100%;
  width: 100px;
}
.header ul {
  display: flex;
  height: 100%;
  align-items: end;
  align-items: center;
}
.header ul li {
  text-decoration: none;
  list-style: none;
  padding: 5px 10px;
  font-size: 1.5rem;
}
.header ul:first-child {
  align-items: end;
}
.header ul:first-child li:first-child {
  padding: 0px;
  border: 0px;
  display: flex;
}
.header ul:first-child li:hover {
  background-color: #BBBBBB;
}
.header .headinfo li {
  border-right: 1px solid #BBBBBB;
  box-sizing: border-box;
  padding-bottom: 5px;
}
.header .headinfo li {
  border-right: 1px solid #BBBBBB;
  box-sizing: border-box;
  padding-bottom: 5px;
}
.header .account button {
  width: 100px;
  height: 30px;
  font-size: 1rem;
  cursor: pointer;
}
.header .account button:hover {
  box-sizing: border-box;
  box-shadow: 5px 5px gray;
}
.header .account .sign {
  background-color: #66CCFF;
  border: 0px;
  border-radius: 5px;
}
.header .account .sign:hover {
  background-color: #2277A7;
}
.header .account .login {
  background-color: #AEDFF7;
  border: 0px;
  border-radius: 5px;
}
.header .account .login:hover {
  background-color: #82C9E7;
}
.header .account select {
  width: 80px;
  height: 50px;
  background-color: #919191;
  border: 1px solid #000000;
}
.header .account select img {
  width: 100%;
  height: auto !important;
}

.main {
  width: 100%;
  height: auto;
}

.useinfo {
  display: flex;
  height: 500px;
  width: 100%;
}
.useinfo:nth-child(1) {
  background-color: #BBBBBB;
  align-items: center;
  flex-direction: column;
  justify-content: space-around;
}
.useinfo:nth-child(1) h1 {
  text-align: center;
}
.useinfo:nth-child(1) h1 a {
  color: #2277A7;
  cursor: pointer;
  text-decoration: underline;
}
.useinfo:nth-child(1) button {
  margin-top: 30px;
  width: 300px;
  height: 60px;
  background-color: #66CCFF;
  color: #000000;
  border: 0px;
  border-radius: 8px;
  font-size: 1.5rem;
  font-weight: 800;
}
.useinfo:nth-child(1) button:hover {
  box-sizing: border-box;
  box-shadow: 5px 5px gray;
  cursor: pointer;
  background-color: #2277A7;
}
.useinfo:nth-child(2) {
  background-color: #919191;
  justify-content: space-between;
  padding-top: 50px;
  padding-bottom: 50px;
}
.useinfo:nth-child(2) .accordionbox {
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.useinfo:nth-child(2) .accordionbox .accordion {
  width: 500px;
  background-color: #BBBBBB;
  border: 1px solid #919191;
  padding: 10px;
  cursor: pointer;
  transition: 0.3s; /* 添加0.5秒的過渡效果 */
}
.useinfo:nth-child(2) .accordionbox .accordion h3 {
  margin: 0;
}
.useinfo:nth-child(2) .accordionbox .content {
  max-height: 0;
  overflow: hidden;
  padding: 0 10px;
  transition: max-height 0.3s ease-out; /* 添加0.5秒的過渡效果 */
}
.useinfo:nth-child(2) .accordionbox .active {
  background-color: #FFFFFF; /* 被展開的手風琴樣式 */
}
.useinfo:nth-child(3) {
  height: 600px;
  padding-top: 50px;
  justify-content: space-between;
  background-color: #BBBBBB;
  /* 台灣國旗 */
  /* 美國國旗 */
  /* 日本國旗 */
  /* 韓國國旗 */
  /* 加拿大國旗 */
  /* 英國國旗 */
  /* 澳洲國旗 */
  /* 法國國旗 */
  /* 德國國旗 */
  /* 義大利國旗 */
  /* 巴西國旗 */
}
.useinfo:nth-child(3) li {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100px;
}
.useinfo:nth-child(3) .flags {
  width: 50%;
  display: flex;
  flex-wrap: wrap;
  align-content: start;
  gap: 20px;
}
.useinfo:nth-child(3) .flag {
  width: 90px;
  height: 55px;
  margin-bottom: 10px;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}
.useinfo:nth-child(3) .taiwan {
  background-image: url("https://upload.wikimedia.org/wikipedia/commons/thumb/7/72/Flag_of_the_Republic_of_China.svg/1280px-Flag_of_the_Republic_of_China.svg.png");
}
.useinfo:nth-child(3) .usa {
  background-image: url("https://upload.wikimedia.org/wikipedia/en/thumb/a/a4/Flag_of_the_United_States.svg/2560px-Flag_of_the_United_States.svg.png");
}
.useinfo:nth-child(3) .japan {
  background-image: url("https://upload.wikimedia.org/wikipedia/en/thumb/9/9e/Flag_of_Japan.svg/1920px-Flag_of_Japan.svg.png");
}
.useinfo:nth-child(3) .korea {
  background-image: url("https://upload.wikimedia.org/wikipedia/commons/thumb/0/09/Flag_of_South_Korea.svg/2560px-Flag_of_South_Korea.svg.png");
}
.useinfo:nth-child(3) .canada {
  background-image: url("https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Flag_of_Canada.svg/255px-Flag_of_Canada.svg.png");
}
.useinfo:nth-child(3) .uk {
  background-image: url("https://www.ibanner.com.tw/wp-content/uploads/2021/05/%E8%8B%B1%E5%9C%8B.jpg");
}
.useinfo:nth-child(3) .australia {
  background-image: url("https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/Flag_of_Australia_%28converted%29.svg/255px-Flag_of_Australia_%28converted%29.svg.png");
}
.useinfo:nth-child(3) .france {
  background-image: url("https://upload.wikimedia.org/wikipedia/en/thumb/c/c3/Flag_of_France.svg/2560px-Flag_of_France.svg.png");
}
.useinfo:nth-child(3) .germany {
  background-image: url("https://upload.wikimedia.org/wikipedia/en/thumb/b/ba/Flag_of_Germany.svg/2560px-Flag_of_Germany.svg.png");
}
.useinfo:nth-child(3) .italy {
  background-image: url("https://upload.wikimedia.org/wikipedia/en/thumb/0/03/Flag_of_Italy.svg/2560px-Flag_of_Italy.svg.png");
}
.useinfo:nth-child(3) .brazil {
  background-image: url("https://upload.wikimedia.org/wikipedia/en/thumb/0/05/Flag_of_Brazil.svg/2560px-Flag_of_Brazil.svg.png");
}

#gary {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 99;
  background-color: rgba(88, 88, 88, 0.6705882353);
  display: flex;
  justify-content: center;
  align-items: center;
}
#gary .form-container {
  width: 80%;
  max-width: 600px;
  background-color: #FFFFFF;
  border-radius: 5px;
  overflow: hidden;
}
#gary .form-container .switch-buttons {
  display: flex;
  justify-content: flex-end;
  padding: 10px;
}
#gary .form-container .switch-buttons button {
  padding: 5px 10px;
  font-size: 16px;
  background-color: transparent;
  border: 2px solid #919191;
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.3s;
}
#gary .form-container .switch-buttons button.active {
  background-color: #66CCFF;
  color: #fff;
  border-color: #aaa;
}
#gary .form-container .switch-buttons button:not(.active):hover {
  background-color: #2277A7;
  color: #fff;
  border-color: #aaa;
}
#gary .form-container .form-wrapper {
  padding: 20px;
}
#gary .form-container .form-wrapper form {
  display: flex;
  flex-direction: column;
}
#gary .form-container .form-wrapper form h2 {
  margin-bottom: 20px;
  text-align: center;
}
#gary .form-container .form-wrapper form .input-group {
  display: flex;
  align-items: center;
  margin-bottom: 20px;
}
#gary .form-container .form-wrapper form .input-group label {
  width: 120px;
  font-weight: bold;
  margin-right: 10px;
}
#gary .form-container .form-wrapper form .input-group input[type=email],
#gary .form-container .form-wrapper form .input-group input[type=password],
#gary .form-container .form-wrapper form .input-group input[type=text] {
  flex: 1;
  padding: 5px;
  font-size: 16px;
  border-radius: 5px;
  border: 2px solid #BBBBBB;
  transition: border-color 0.3s;
}
#gary .form-container .form-wrapper form .input-group input[type=email]:focus,
#gary .form-container .form-wrapper form .input-group input[type=password]:focus,
#gary .form-container .form-wrapper form .input-group input[type=text]:focus {
  outline: none;
  border-color: #BBBBBB;
}
#gary .form-container .form-wrapper form .input-group button#send-code-btn {
  margin-left: 10px;
  padding: 5px 10px;
  font-size: 16px;
  background-color: #66CCFF;
  color: #FFFFFF;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.3s;
}
#gary .form-container .form-wrapper form .input-group button#send-code-btn:hover {
  background-color: #2277A7;
}
#gary .form-container .form-wrapper form button[type=submit] {
  padding: 10px;
  font-size: 18px;
  background-color: #aaa;
  color: #fff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.3s;
}
#gary .form-container .form-wrapper form button[type=submit]:hover {
  background-color: #666;
}/*# sourceMappingURL=interface.css.map */
                                            </style>
                                        }