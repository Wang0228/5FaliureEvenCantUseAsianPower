
@{
    ViewData["Title"] = "UserReport";
}

@if (User.Identity.IsAuthenticated)
{
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Document</title>
        <link rel="stylesheet" href="./QA.css">
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    </head>
    <body>
        <div class="header">
            <ul class="headinfo">
                <li>
                    <img src="https://media1.giphy.com/media/7kn27lnYSAE9O/200.webp?cid=ecf05e47mwx2cuu86ct9i80fhmbahffgmbvl4uq2i6o0b0rq&rid=200.webp&ct=g"
                         alt="">
                </li>
                <li><a asp-controller="Reports" asp-action="Home">Home</a></li>
                <li><a asp-controller="Users" asp-action="Index">about us</a></li>
                <li><a asp-controller="Reports" asp-action="UserReport">QAgpt</a></li>
            </ul>
            <ul class="account" id="account">

                @if (User.Identity.IsAuthenticated)
                {
                    <li><a asp-controller="Users" asp-action="Signout" class="btn btn-primary me-2">@User.Identity.Name</a></li>
                    <li>@Html.ActionLink("登出", "Signout","Users", null, new { @class="btn btn-danger"})</li>
                }
                else
                {
                    <li>
                        <a class="Create" asp-controller="Users" asp-action="Create">Sign up</a>
                    </li>
                    <li>
                        <a class="login" asp-controller="Users" asp-action="Login">Log in</a>
                    </li>
                }
                <li>
                    <select name="language" id="language">
                        <option value="zh" selected>Chinese</option>
                        <option value="en">English</option>
                        <option value="jp">Japanese</option>
                    </select>
                </li>

            </ul>
        </div>
        <div class="main">
            <div class="mainleft" id="mainleft">
                <button id="newchat">+ New Chat</button>
                <div class="chatbox" id="chatbox">
                    <div class="chatHistory" id="chatHistory">
                        <p>問答紀錄</p>
                        <div class="historyBtn">
                            <p>先前的紀錄</p>
                            <button>X</button>
                        </div>
                    </div>
                    <div class="chat">
                        <textarea class="answer" id="answer" readonly></textarea>
                        <div class="QuestionAndSubmit">
                            <textarea type="text" class="question" placeholder="請輸入問題" rows="1" id="question"></textarea>
                            <button class="questionSubmit">提交</button>
                            <button class="bigger"> <img src="./full-size.png" alt=""></button>
                        </div>
                    </div>
                </div>
                <input type="file" name="" id="" class="train-data">
                <div class="codebox" id="codebox">
                    <div class="codeshow"></div>
                </div>
            </div>
            <div class="mainright" id="mainright">
                <button class="rightControl" id="right-control">
                    <img src="./right-arrow.png" alt="" id="arrow">
                </button>
                <select class="modelselector" id="rightDis">
                    <option selected value="">danvic</option>
                    <option value="">other</option>
                </select>
                <div class="temRange" id="rightDis">
                    <label for="range-input">Select a value:</label>
                    <input type="range" id="range-input" name="range" min="0" max="1" step="0.1" value="0.5">
                    <span>0.5</span>
                </div>

            </div>
        </div>

        <script>





            let key, PromptText, n;
            //提交問題
            let question = document.getElementById('question');
            let answer = document.getElementById('answer');
            let QuestionAndSubmitBtn = document.querySelector('.questionSubmit')
            let AllAnser = "";

            const QuestionSubmit = async function () {
                var myHeaders = new Headers();

                var data = { "Que": question.value };
                var raw = JSON.stringify(data);

                var requestOptions = {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: raw,
                    redirect: 'follow'
                };

                try {
                    const response = await fetch("https://localhost:44330/api/Datafind", requestOptions);
                    const result = await response.text();
                    AllAnser = result;

                    var myHeaders = new Headers();
                    myHeaders.append("Content-Type", "application/json");

                    var raw = JSON.stringify({
                        "Q": question.value,
                        "A": AllAnser
                    });

                    var requestOptions = {
                        method: 'POST',
                        headers: myHeaders,
                        body: raw,
                        redirect: 'follow'
                    };

                    const response2 = await fetch("https://localhost:44330/api/Turbo", requestOptions);
                    const result2 = await response2.text();
                    answer.value += result2;
                } catch (error) {
                    console.log('error', error);
                }
            }

            QuestionAndSubmitBtn.addEventListener('click', QuestionSubmit);




            // 建立 email 和 password 陣列
            const emailList = [];
            const passwordList = [];
            const QAHistoryTimes = 0;
            const questionRows = document.getElementById('question');

            questionRows.addEventListener('keydown', function (e) {
                const lineHeight = parseInt(window.getComputedStyle(questionRows).getPropertyValue('line-height'));
                const totalRows = Math.round(questionRows.scrollHeight / lineHeight);
                //console.log(`總行數: ${totalRows}`);
                if (e.key === 'Enter') {
                    if (questionRows.rows < 3) {
                        questionRows.rows += 1;
                    }

                }

                if (e.key === 'Backspace') {
                    // 如果行数小于等于 3，并且当前的 row 大于 1，则 rows 减 1
                    if (totalRows <= 3 && totalRows > 1) {
                        questionRows.rows -= 1;
                    }

                }
            });

            //template 參數調整
            const rangeInput = document.getElementById("range-input");
            const range = document.querySelector("span:first-of-type");
            rangeInput.addEventListener("input", () => {
                range.textContent = rangeInput.value;
            });


            //右邊區塊動態
            let arrowWay = 0;
            let rightControl = document.getElementById("right-control");
            let arrow = rightControl.querySelector("img");
            let mainright = document.getElementById("mainright");
            let mainleft = document.getElementById("mainleft");
            let rightDis = mainright.querySelectorAll("#rightDis");
            rightControl.addEventListener("click", function () {
                arrow.style.transform = "scale(0.4)";
                arrow.style.transition = "transform 0.2s";

                setTimeout(function () {
                    if (arrowWay === 0) {
                        arrow.style.transform = "scale(1) rotate(180deg)";
                        arrowWay = 1;
                        mainright.style.transform = "translateX(35)";
                        mainright.style.transition = "transform 0.2s ease-in-out";
                        mainright.style.width = "35px";
                        rightDis.forEach(function (e) {
                            e.style.display = "none";
                        });
                    } else {
                        arrow.style.transform = "scale(1) rotate(0deg)";
                        arrowWay = 0;
                        mainright.style.transform = "translateX(0)";
                        mainright.style.transition = "transform 0.5s ease-in-out";
                        mainright.style.width = "25%";
                        rightDis.forEach(function (e) {
                            e.style.display = "flex";
                        });
                    }
                }, 300);
            });





            //登入與註冊按鈕觸發
            function sign() {
                let gary = document.getElementById('gary')
                gary.setAttribute("style", "display:block;position:absolute;width: 100%;height: 100%;z-index: 99;background-color: #585858ab;display: flex;justify - content: center;align - items: center; ")
                registerBtn.classList.add("active");
                loginBtn.classList.remove("active");
                registerForm.style.display = "flex";
                loginForm.style.display = "none";
            }
            function login() {
                let gary = document.getElementById('gary')
                gary.setAttribute("style", "display:block;position:absolute;width: 100%;height: 100%;z-index: 99;background-color: #585858ab;display: flex;justify - content: center;align - items: center; ")
                loginBtn.classList.add("active");
                registerBtn.classList.remove("active");
                loginForm.style.display = "flex";
                registerForm.style.display = "none";
            }


            const loginBtn = document.getElementById("login-btn");
            const registerBtn = document.getElementById("register-btn");
            const closeBtn = document.getElementById("close-btn");
            const loginForm = document.getElementById("login-form");
            const registerForm = document.getElementById("register-form");
            const sendCodeBtn = document.getElementById("send-code-btn");
            const registerEmailInput = document.getElementById("register-email");
            const codeInput = document.getElementById("code");
            const registerPasswordInput = document.getElementById("register-password");
            const confirmPasswordInput = document.getElementById("confirm-password");

            // 切換登入和註冊表單
            loginBtn.addEventListener("click", () => {
                loginBtn.classList.add("active");
                registerBtn.classList.remove("active");
                loginForm.style.display = "flex";
                registerForm.style.display = "none";
            });

            registerBtn.addEventListener("click", () => {
                registerBtn.classList.add("active");
                loginBtn.classList.remove("active");
                registerForm.style.display = "flex";
                loginForm.style.display = "none";
            });
            //關閉登入介面
            closeBtn.addEventListener("click", () => {
                let gary = document.getElementById('gary')
                gary.setAttribute("style", "display:none")
            })

            // 發送驗證碼到註冊的電子郵件
            sendCodeBtn.addEventListener("click", () => {
                const email = registerEmailInput.value;
                // 將驗證碼發送到電子郵件
            });

            // 將註冊資料儲存進陣列
            registerForm.addEventListener("submit", (event) => {
                event.preventDefault();

                const email = registerEmailInput.value;

                //這邊可以新增驗證碼驗證

                const password = registerPasswordInput.value;
                const confirmPassword = confirmPasswordInput.value;

                // 驗證輸入的資料
                if (password !== confirmPassword) {
                    alert("Passwords do not match");
                    return;
                }
                if (emailList.includes(email)) {
                    alert("This email has already been registered. Please use a different email.");
                    return;
                }
                // 將 email 和 password 儲存進陣列
                emailList.push(email);
                passwordList.push(password);

                // 提交表單
                alert("Registration successful!");
                registerForm.reset();
            });


            // 驗證登入資料是否存在於陣列中
            loginForm.addEventListener("submit", (event) => {
                event.preventDefault();

                const email = loginForm.email.value;
                const password = loginForm.password.value;

                // 搜尋 email 和 password 是否存在於陣列中
                const index = emailList.indexOf(email);
                if (index !== -1 && passwordList[index] === password) {
                    alert("Login successful!");
                    loginForm.reset();
                    // 登入成功後執行其他動作\
                    let gary = document.getElementById('gary')
                    gary.setAttribute("style", "display:none")
                    loginbool = true;
                    let accountinfotrue =
                        `<li>
                                    <button class="sign"onclick="account()">email</button>
                                </li>
                                <li>
                                    <button class="login"onclick="logout()">log out</button>
                                </li>
                                <li>
                                    <select name="" id="">
                                    <option value="">zh</option>
                                    </select>
                                </li>
                                `
                    account.innerHTML = accountinfotrue
                } else {
                    alert("Invalid email or password!");
                }
            });


        </script>
    </body>
    </html>

    @section topCSS{
        <style>
            
            body, html, h1, h2, h3, h4, h5, h6, p, span, img, ul, li {
              margin: 0px;
              padding: 0px;
            }

            body {
              position: relative;
            }

            a {
              text-decoration: none;
              color: #000000;
            }

            li {
              list-style: none;
            }

            .pdlr {
              box-sizing: border-box;
              padding: 0 10%;
            }

            .header {
              box-sizing: border-box;
              padding: 0 10%;
              display: flex;
              width: 100%;
              height: 70px;
              background-color: #919191;
              justify-content: space-between;
            }
            .header img {
              height: 100%;
              width: 100px;
            }
            .header ul {
              display: flex;
              height: 100%;
              align-items: end;
              align-items: center;
            }
            .header ul li {
              text-decoration: none;
              list-style: none;
              padding: 5px 10px;
              font-size: 1.5rem;
            }
            .header ul:first-child {
              align-items: end;
            }
            .header ul:first-child li:first-child {
              padding: 0px;
              border: 0px;
              display: flex;
            }
            .header ul:first-child li:hover {
              background-color: #BBBBBB;
            }
            .header .headinfo li {
              border-right: 1px solid #BBBBBB;
              box-sizing: border-box;
              padding-bottom: 5px;
            }
            .header .account button { 
              width: 100px;
              height: 30px;
              font-size: 1rem;
              cursor: pointer;
            }
            .header .account button:hover {
              box-sizing: border-box;
              box-shadow: 5px 5px gray;
            }
            .header .account .Create {
              background-color: #66CCFF;
              border: 0px;
              border-radius: 5px;
            }
            .header .account .sign:hover {
              background-color: #2277A7;
            }
            .header .account .login {
              background-color: #AEDFF7;
              border: 0px;
              border-radius: 5px;
            }
            .header .account .login:hover {
              background-color: #82C9E7;
            }
            .header .account select {
              width: 80px;
              height: 50px;
              background-color: #919191;
              border: 1px solid #000000;
            }
            .header .account select img {
              width: 100%;
              height: auto !important;
            }

            #gary {
              position: absolute;
              width: 100%;
              height: 100%;
              z-index: 99;
              background-color: rgba(88, 88, 88, 0.6705882353);
              display: flex;
              justify-content: center;
              align-items: center;
            }
            #gary .form-container {
              width: 80%;
              max-width: 600px;
              background-color: #FFFFFF;
              border-radius: 5px;
              overflow: hidden;
            }
            #gary .form-container .switch-buttons {
              display: flex;
              justify-content: flex-end;
              padding: 10px;
            }
            #gary .form-container .switch-buttons button {
              padding: 5px 10px;
              font-size: 16px;
              background-color: transparent;
              border: 2px solid #919191;
              border-radius: 5px;
              cursor: pointer;
              transition: all 0.3s;
            }
            #gary .form-container .switch-buttons button.active {
              background-color: #66CCFF;
              color: #fff;
              border-color: #919191;
            }
            #gary .form-container .switch-buttons button:not(.active):hover {
              background-color: #2277A7;
              color: #fff;
              border-color: #919191;
            }
            #gary .form-container .form-wrapper {
              padding: 20px;
            }
            #gary .form-container .form-wrapper form {
              display: flex;
              flex-direction: column;
            }
            #gary .form-container .form-wrapper form h2 {
              margin-bottom: 20px;
              text-align: center;
            }
            #gary .form-container .form-wrapper form .input-group {
              display: flex;
              align-items: center;
              margin-bottom: 20px;
            }
            #gary .form-container .form-wrapper form .input-group label {
              width: 120px;
              font-weight: bold;
              margin-right: 10px;
            }
            #gary .form-container .form-wrapper form .input-group input[type=email],
            #gary .form-container .form-wrapper form .input-group input[type=password],
            #gary .form-container .form-wrapper form .input-group input[type=text] {
              flex: 1;
              padding: 5px;
              font-size: 16px;
              border-radius: 5px;
              border: 2px solid #BBBBBB;
              transition: border-color 0.3s;
            }
            #gary .form-container .form-wrapper form .input-group input[type=email]:focus,
            #gary .form-container .form-wrapper form .input-group input[type=password]:focus,
            #gary .form-container .form-wrapper form .input-group input[type=text]:focus {
              outline: none;
              border-color: #BBBBBB;
            }
            #gary .form-container .form-wrapper form .input-group button#send-code-btn {
              margin-left: 10px;
              padding: 5px 10px;
              font-size: 16px;
              background-color: #66CCFF;
              color: #FFFFFF;
              border: none;
              border-radius: 5px;
              cursor: pointer;
              transition: all 0.3s;
            }
            #gary .form-container .form-wrapper form .input-group button#send-code-btn:hover {
              background-color: #2277A7;
            }
            #gary .form-container .form-wrapper form button[type=submit] {
              padding: 10px;
              font-size: 18px;
              background-color: #66CCFF;
              color: #FFFFFF;
              border: none;
              border-radius: 5px;
              cursor: pointer;
              transition: all 0.3s;
            }
            #gary .form-container .form-wrapper form button[type=submit]:hover {
              background-color: #2277A7;
            }

            .main {
              flex-shrink: 1;
              height: 1000px;
              display: flex;
              background-color: #BBBBBB;
            }
            .main .mainleft {
              flex-grow: 1;
              height: 100%;
              padding: 50px;
              box-sizing: border-box;
              display: flex;
              flex-direction: column;
              align-items: center;
            }
            .main .mainleft #newchat {
              cursor: pointer;
              width: 90%;
              height: 50px;
              border: none;
              background-color: #757575;
              font-size: 1.5rem;
            }
            .main .mainleft #newchat:hover {
              background-color: #919191;
            }
            .main .mainleft .chatbox {
              width: 90%;
              background-color: #919191;
              height: 500px;
              display: flex;
            }
            .main .mainleft .chatbox .chatHistory {
              padding: 5px;
              box-sizing: border-box;
              width: 20%;
              height: 100%;
              background-color: #919191;
              border-right: 1px solid #000000;
            }
            .main .mainleft .chatbox .chatHistory > p {
              width: auto;
              border-bottom: 1px solid black;
            }
            .main .mainleft .chatbox .chatHistory > .historyBtn {
              background-color: #757575;
              margin-top: 5px;
              box-sizing: border-box;
              width: 100%;
              padding: 5px;
              display: flex;
              align-items: center;
              justify-content: space-between;
              height: 40px;
              cursor: pointer;
            }
            .main .mainleft .chatbox .chatHistory > .historyBtn:hover {
              background-color: #BBBBBB;
            }
            .main .mainleft .chatbox .chatHistory > .historyBtn button {
              background-color: rgba(107, 107, 107, 0);
              border: none;
              cursor: pointer;
            }
            .main .mainleft .chatbox .chat {
              gap: 10px;
              width: 80%;
              height: 100%;
              box-sizing: border-box;
              padding: 10px;
              display: flex;
              flex-direction: column;
              justify-content: space-between;
            }
            .main .mainleft .chatbox .chat .answer {
              flex-grow: 1;
              background-color: white;
              border: 2px solid gray;
              border-radius: 5px;
              overflow: auto;
              font-size: 1.2rem;
              resize: none;
            }
            .main .mainleft .chatbox .chat .QuestionAndSubmit {
              display: flex;
              width: 100%;
            }
            .main .mainleft .chatbox .chat .QuestionAndSubmit .question {
              width: 90%;
              height: auto;
              font-size: 1.2rem;
              overflow: auto;
              resize: none;
              line-height: 1.2rem;
            }
            .main .mainleft .chatbox .chat .QuestionAndSubmit .question::-webkit-scrollbar {
              width: 10px; /* 設置滾動條的寬度 */
            }
            .main .mainleft .chatbox .chat .QuestionAndSubmit .question::-webkit-scrollbar-thumb {
              background-color: #bbbbbb; /* 設置滾動條的顏色 */
              border-radius: 5px; /* 設置滾動條的圓角 */
            }
            .main .mainleft .chatbox .chat .QuestionAndSubmit .question::-webkit-scrollbar-track {
              background-color: #fff; /* 設置滾動條的背景顏色 */
              border-radius: 5px; /* 設置滾動條的圓角 */
              border: none; /* 去掉滾動條的邊框 */
            }
            .main .mainleft .chatbox .chat .QuestionAndSubmit .questionSubmit {
              width: 10%;
            }
            .main .mainleft .chatbox .chat .bigger {
              display: flex;
              align-items: center;
            }
            .main .mainleft .chatbox .chat .bigger img {
              width: 20px;
            }
            .main .mainleft .codebox {
              margin-top: 50px;
              width: 90%;
              height: 500px;
              background-color: rgb(163, 163, 163);
              padding: 10px;
              box-sizing: border-box;
            }
            .main .mainleft .codebox .codeshow {
              width: 100%;
              height: 100%;
              background-color: white;
              border-radius: 5px;
            }
            .main .mainleft .train-data {
              height: 50px;
            }
            .main .mainright {
              box-sizing: border-box;
              padding-left: 35px;
              position: relative;
              width: 25%;
              height: 100%;
              background-color: rgb(145, 145, 145);
              display: flex;
              flex-direction: column;
              align-items: start;
            }
            .main .mainright .rightControl {
              position: absolute;
              top: 0;
              left: 0;
              height: 50px;
              width: 35px;
              margin: 0px;
              padding: 0px;
              display: flex;
              align-items: center;
              justify-content: center;
            }
            .main .mainright .rightControl img {
              width: 100%;
            }
            .main .mainright .modelselector {
              margin-top: 10px;
              width: calc(100% - 35px);
              height: 60px;
              font-size: 1.3rem;
              line-height: 50px;
            }
            .main .mainright .temRange {
              margin-top: 10px;
              display: flex;
              flex-direction: column;
              height: auto;
              width: calc(100% - 35px);
              background-color: white;
            }/*# sourceMappingURL=QA.css.map */
        </style>
    }
}

